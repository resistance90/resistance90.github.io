{"version":3,"sources":["components/Header.js","components/Edu.js","components/Hobby.js","components/Home.js","components/Job.js","components/Contacts.js","components/Body.js","components/Mypage.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","Nav","NavLink","href","to","React","Component","Edu","src","Hobby","Home","Job","works","require","map","work","ListGroupItem","ListGroupItemHeading","dur","comp","ListGroupItemText","resp","res","ach","ListGroup","Contacts","withRouter","location","TransitionGroup","CSSTransition","key","timeout","enter","exit","classNames","path","component","Mypage","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yzDASqBA,G,wDAEjB,WAAYC,GAAO,uCACTA,G,qDAMV,OACI,yBAAKC,UAAU,cACf,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAK,KAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,gBAClB,kBAACF,EAAA,EAAD,CAASC,KAAK,KAAI,kBAAC,IAAD,CAAMC,GAAG,QAAT,uBAClB,kBAACF,EAAA,EAAD,CAASC,KAAK,KAAI,kBAAC,IAAD,CAAMC,GAAG,QAAT,iBAClB,kBAACF,EAAA,EAAD,CAASC,KAAK,KAAI,kBAAC,IAAD,CAAMC,GAAG,UAAT,aAClB,kBAACF,EAAA,EAAD,CAASC,KAAK,KAAI,kBAAC,IAAD,CAAMC,GAAG,aAAT,mB,GAhBMC,IAAMC,Y,uBCPrBC,E,kDACjB,WAAYR,GAAQ,uCACVA,G,qDAKN,OACI,yBAAKC,UAAU,SAAQ,yBAAKQ,IAAI,wC,GARXH,IAAMC,WCClBG,E,kDACjB,WAAYV,GAAQ,uCACVA,G,qDAKH,OACK,6BACI,yBAAKS,IAAI,wC,GATMH,IAAMC,WCCpBI,E,kDACjB,WAAYX,GAAQ,uCACVA,G,qDAKN,OACI,6BACI,sCAGA,6HAGA,oJAGA,+C,GAlBkBM,IAAMC,W,gCCDnBK,E,kDACjB,WAAYZ,GAAQ,uCACVA,G,qDAIN,IACIa,EADOC,EAAQ,IACFC,KAAI,SAAAC,GACrB,OAAQ,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,KAAuBF,EAAKG,IAA5B,OAAqCH,EAAKI,MAC1C,kBAACC,EAAA,EAAD,KACG,iDACCL,EAAKM,KAAKP,KAAI,SAAAQ,GACX,OACI,wBAAItB,UAAU,YACTsB,OAKhB,kBAACF,EAAA,EAAD,KACA,6CACIL,EAAKQ,IAAIT,KAAI,SAAAQ,GACV,OACI,wBAAItB,UAAU,YACTsB,WAOrB,OACI,6BACI,kBAACE,EAAA,EAAD,KACKZ,Q,GAnCYP,IAAMC,WCDlBmB,E,kDACjB,WAAY1B,GAAQ,uCACVA,G,qDAKN,OACI,6BAAK,yBAAKS,IAAI,wC,GARYH,IAAMC,WCgC7BoB,mBApBf,YAA2B,IAAXC,EAAU,EAAVA,SAER,OACI,kBAACC,EAAA,EAAD,CAAiB5B,UAAU,oBACvB,kBAAC6B,EAAA,EAAD,CAAeC,IAAKH,EAASG,IAAKC,QAAS,CAAEC,MAAO,IAAMC,KAAM,KAAQC,WAAW,UAC/E,6BAASlC,UAAU,iBACf,kBAAC,IAAD,CAAQ2B,SAAUA,GACd,kBAAC,IAAD,CAAOQ,KAAK,OAAYC,UAAWzB,IACnC,kBAAC,IAAD,CAAOwB,KAAK,OAAYC,UAAW7B,IACnC,kBAAC,IAAD,CAAO4B,KAAK,SAAYC,UAAW3B,IACnC,kBAAC,IAAD,CAAO0B,KAAK,YAAYC,UAAWX,IACnC,kBAAC,IAAD,CAAOU,KAAK,IAAYC,UAAW1B,WCKhD2B,E,uKAZP,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GATChC,IAAMC,WCFZgC,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dfcb0c13.chunk.js","sourcesContent":["\r\n\r\nimport React from 'react';\r\nimport { Nav, NavLink } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\nrender(){\r\n\r\n    return(\r\n        <div className=\"App-header\">\r\n        <Nav>\r\n            <NavLink href=\"#\"><Link to='/'>What is it?</Link></NavLink> \r\n            <NavLink href=\"#\"><Link to='/job'>My work experience</Link></NavLink> \r\n            <NavLink href=\"#\"><Link to='/edu'>My education</Link></NavLink> \r\n            <NavLink href=\"#\"><Link to='/hobby'>My hobby</Link></NavLink> \r\n            <NavLink href=\"#\"><Link to='/contacts'>Contacts</Link></NavLink> \r\n        </Nav>\r\n        </div>\r\n    )\r\n}\r\n}","import React from 'react';\r\n\r\nexport default class Edu extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"image\"><img src=\"http://placekitten.com/300/300\"/></div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default class Hobby extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n           \r\n           return (\r\n                <div>\r\n                    <img src=\"http://placekitten.com/200/300\"/>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport default class Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Hello!\r\n                </h1>\r\n                <p>\r\n                    This is my personal web-page. It is primarily used by me to test my skills in web programming.\r\n                </p>\r\n                <p>\r\n                    Also, here you can know more about what I am doing. Please explore it, if you're interested in collaborating with me.\r\n                </p>\r\n                <p>\r\n                    Be welcome!\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\r\n\r\nexport default class Job extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let work = require(\"../work.json\");\r\n        let works = work.map(work => {\r\n        return (<ListGroupItem>\r\n             <ListGroupItemHeading>{work.dur} :: {work.comp}</ListGroupItemHeading>\r\n             <ListGroupItemText>\r\n                <h5>Responcibilities:</h5>\r\n                {work.resp.map(res => {\r\n                    return (\r\n                        <li className=\"worklist\">\r\n                            {res}\r\n                        </li>\r\n                    )\r\n                })}\r\n             </ListGroupItemText>\r\n             <ListGroupItemText>\r\n             <h5>Achievements:</h5>\r\n                {work.ach.map(res => {\r\n                    return (\r\n                        <li className=\"worklist\">\r\n                            {res}\r\n                        </li>\r\n                    )\r\n                })}\r\n             </ListGroupItemText>\r\n        </ListGroupItem>);\r\n        })\r\n        return (\r\n            <div>\r\n                <ListGroup>\r\n                    {works}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Contacts extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div><img src=\"http://placekitten.com/200/200\"/></div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Switch, Route, Link, withRouter} from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n\r\n//Компоненты\r\nimport Edu from './Edu.js'\r\nimport Hobby from './Hobby.js'\r\nimport Home from './Home.js'\r\nimport Job from './Job.js'\r\nimport Contacts from './Contacts.js'\r\n\r\n\r\nfunction Body ({location}){\r\n    \r\n        return(\r\n            <TransitionGroup className=\"transition-group\">\r\n                <CSSTransition key={location.key} timeout={{ enter: 1000, exit: 1000 }} classNames=\"switch\">\r\n                    <section className=\"route-section\">\r\n                        <Switch location={location}>\r\n                            <Route path=\"/job\"      component={Job}></Route>\r\n                            <Route path=\"/edu\"      component={Edu}></Route>\r\n                            <Route path=\"/hobby\"    component={Hobby}></Route>\r\n                            <Route path=\"/contacts\" component={Contacts}></Route>\r\n                            <Route path=\"/\"         component={Home}></Route>\r\n                        </Switch>\r\n                    </section>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        )\r\n    }\r\n\r\n\r\nexport default withRouter(Body);","//Библиотеки\r\n\r\nimport React from 'react';\r\nimport { Nav, NavLink } from 'reactstrap';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router,} from \"react-router-dom\";\r\n\r\n//Компоненты\r\n\r\nimport Header from './Header.js'\r\nimport Body from './Body.js'\r\n\r\n\r\nclass Mypage extends React.Component{\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                <Router >\r\n                    <Header />\r\n                    <Body />\r\n                </Router>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Mypage;","import React from 'react';\n\nimport './App.css';\nimport Mypage from './components/Mypage.js'\n\nfunction App() {\n  return (\n    <Mypage />\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}